schema {
  query: Query
}

type Pool @key(fields : ["chainId", "totalLiquidity"], name : "byTotalLiquidity", queryField : "poolsByTotalLiquidity") {
  address: String
  amp: String
  chainId: Int!
  createTime: Int
  expiryTime: String
  factory: String
  holdersCount: String
  id: String!
  lowerTarget: String
  mainIndex: Int
  managementFee: String
  name: String
  owner: String
  poolType: String
  swapEnabled: Boolean
  swapFee: String
  swapsCount: String
  symbol: String
  tokens: [PoolToken]
  tokensList: [String]
  totalLiquidity: String
  totalShares: String
  totalSwapFee: String
  totalSwapVolume: String
  totalWeight: String
  unitSeconds: String
  upperTarget: String
  wrappedIndex: Int
}

type PoolConnection {
  items: [Pool]
  nextToken: String
}

type PoolToken @entity {
  address: String
  balance: String
  decimals: Int
  id: String
  name: String
  priceRate: String
  symbol: String
  #  WeightedPool Only
  weight: String
}

type Query {
  pools(chainId: Int!, first: Int, orderBy: String, orderDirection: String, skip: Int, where: TablePoolsFilterInput): [Pool]
}

input TableBooleanFilterInput {
  eq: Boolean
  ne: Boolean
}

input TableFloatFilterInput {
  between: [Float]
  contains: Float
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
  notContains: Float
}

input TableIDFilterInput {
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
}

input TableIntFilterInput {
  between: [Int]
  contains: Int
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
  notContains: Int
}

input TablePoolsFilterInput {
  address: TableStringFilterInput
  amp: TableIntFilterInput
  chainId: TableIntFilterInput
  createTime: TableIntFilterInput
  expiryTime: TableIntFilterInput
  factory: TableStringFilterInput
  holdersCount: TableIntFilterInput
  id: TableStringFilterInput
  lowerTarget: TableFloatFilterInput
  mainIndex: TableIntFilterInput
  managementFee: TableFloatFilterInput
  owner: TableStringFilterInput
  poolType: TableStringFilterInput
  swapEnabled: TableBooleanFilterInput
  swapFee: TableFloatFilterInput
  swapsCount: TableIntFilterInput
  tokensList: TableStringFilterInput
  totalLiquidity: TableFloatFilterInput
  totalShares: TableFloatFilterInput
  totalSwapFee: TableFloatFilterInput
  totalSwapVolume: TableFloatFilterInput
  totalWeight: TableFloatFilterInput
  unitSeconds: TableIntFilterInput
  upperTarget: TableFloatFilterInput
  wrappedIndex: TableIntFilterInput
}

input TableStringFilterInput {
  beginsWith: String
  between: [String]
  contains: [String]
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
  ne: String
  notContains: String
  not_in: [String]
}
